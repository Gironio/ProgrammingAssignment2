library(MASS)
makeCacheMatrix <- function(x = matrix()) {
inv <- NULL
set <- function(y) {
x<<-y
inv<<- NULL
}
get <- function()x
setinv <- function(inverse)inv<<-inverse
getinv<- function() {
inver <- ginv(x)
inver%%x
}
list(set = set, get = get,
setinv = setinv,
getinv = getinv)
}
library(MASS)
makeCacheMatrix <- function(x = matrix()) {
inv <- NULL
set <- function(y) {
x<<-y
inv<<- NULL
}
get <- function()x
setinv <- function(inverse)inv<<-inverse
getinv<- function() {
inver <- ginv(x)
inver%%x
}
list(set = set, get = get,
setinv = setinv,
getinv = getinv)
}
cacheSolve <- function(x, ...)
{
inv <- x$getinv()
if(!is.null(inv)){
message("getting cache data!")
return(inv)
}
data <- x$get()
inv <- solve(data,...)
x$setinv(inv)
inv
}
f<- makeCacheMatrix(matrix(1:8,2,4)
f<- makeCacheMatrix(matrix(1:8,2,4))
f<- makeCacheMatrix(matrix(1:8,2,4))
f$get()
fgetinv()
f$getinv()
cacheSolve(f)
library(MASS)
makeCacheMatrix <- function(x = matrix()) {
inv <- NULL
set <- function(y) {
x<<-y
inv<<- NULL
}
get <- function()x
setinv <- function(inverse)inv<<-inverse
getinv<- function() {
inver <- ginv(x)
inver%*%x
}
list(set = set, get = get,
setinv = setinv,
getinv = getinv)
}
cacheSolve <- function(x, ...)
{
inv <- x$getinv()
if(!is.null(inv)){
message("getting cache data!")
return(inv)
}
data <- x$get()
inv <- solve(data,...)
x$setinv(inv)
inv
}
}
library(MASS)
makeCacheMatrix <- function(x = matrix()) {
inv <- NULL
set <- function(y) {
x<<-y
inv<<- NULL
}
get <- function()x
setinv <- function(inverse)inv<<-inverse
getinv<- function() {
inver <- ginv(x)
inver%*%x
}
list(set = set, get = get,
setinv = setinv,
getinv = getinv)
}
cacheSolve <- function(x, ...)
{
inv <- x$getinv()
if(!is.null(inv)){
message("getting cache data!")
return(inv)
}
data <- x$get()
inv <- solve(data,...)
x$setinv(inv)
inv
}
}
library(MASS)
makeCacheMatrix <- function(x = matrix()) {
inv <- NULL
set <- function(y) {
x<<-y
inv<<- NULL
}
get <- function()x
setinv <- function(inverse)inv<<-inverse
getinv<- function() {
inver <- ginv(x)
inver%*%x
}
list(set = set, get = get,
setinv = setinv,
getinv = getinv)
}
cacheSolve <- function(x, ...)
{
inv <- x$getinv()
if(!is.null(inv)){
message("getting cache data!")
return(inv)
}
data <- x$get()
inv <- solve(data,...)
x$setinv(inv)
inv
}
f<-makeCacheMatrix(1:8,2,4)
t<-makeCacheMatrix(matrix(1:8,2,4))
f<-makeCacheMatrix(matrix(1:8,2,4))
f$get()
f$getinv()
cacheSolve(f)
